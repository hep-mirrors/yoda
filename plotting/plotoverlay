#! /usr/bin/env python

"""\
Usage: %prog data.yoda
"""

import optparse, plotting
op = optparse.OptionParser(usage=__doc__)
op.add_option("-E", dest="ENGINE", default="PGF", help="use MPL, TEX, or PGF renderer")
opts, args = op.parse_args()


## Load and sort data objects
import yoda, re
aos = yoda.read(args[0], asdict=False)
#print aos
re_path = re.compile(r"([^\[\]]+)(\[[^\]]+\])?")
hgroups = {}
for ao in aos:
    #print ao.path
    m = re_path.match(ao.path)
    if m and m.group(2):
        basepath, var = m.groups()
        var = var.strip("[]") #< strip surrounding brackets
    else:
        basepath, var = ao.path, None
    hgroups.setdefault(basepath, []).append(ao)


## Loop over plots, showing overlaid histos in automatic styles and colors
mpl, plt = plotting.setup_mpl(opts.ENGINE)
COLORS = [plt.get_cmap("jet")((i*0.77) % 1) for i in xrange(1,6)] # np.linspace(0.3, 0.8, 5)]
STYLES = ["-", "--", ":", "-."]
for obs, hs in hgroups.iteritems():
    obsname = obs.replace("/", "_").strip("_")
    for ih, h in enumerate(hs):
        h.annotations.setdefault("Color", COLORS[ih % len(COLORS)])
        h.annotations.setdefault("LineStyle", STYLES[ih % len(STYLES)])
    f, axm, axr = plotting.plothists(hs)
    f.savefig(obsname+".pdf")
