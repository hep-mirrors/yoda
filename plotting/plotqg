#! /usr/bin/env python

"""\
Usage: %prog data.yoda
"""

# "/Jet_Obs_test/gluon_C02_1"

import optparse, plotting
op = optparse.OptionParser(usage=__doc__)
opts, args = op.parse_args()


## Load and sort data objects
import yoda, os
aos = yoda.read(args[0], asdict=False)
hgroups = {}
for ao in aos:
    basedir = os.path.dirname(ao.path)
    basename = os.path.basename(ao.path)
    if "_" in basename:
        var, basename = basename.split("_", 1)
        ao.title = var
    basepath = os.path.join(basedir, basename)
    hgroups.setdefault(basepath, []).append(plotting.NumpyHist(ao))


COLORS = ["red", "blue", "green", "orange", "magenta"]
STYLES = ["-", "--", ":", "-."]

def plot(args):
    obs, hs = args # until pool.starmap() is available
    obsname = obs.replace("/", "_").strip("_")
    filename = obsname + ".pdf"
    print "Plotting " + filename
    for ih, h in enumerate(hs):
        h.annotations.setdefault("Color", COLORS[ih % len(COLORS)])
        h.annotations.setdefault("LineStyle", STYLES[ih % len(STYLES)])
    f, axm, axr = plotting.plothists(hs)
    f.savefig(filename)


## Do plotting
mpl, plt = plotting.setup_mpl()
# for obs, hs in hgroups.iteritems():
#     plot(obs, hs)
import multiprocessing
pool = multiprocessing.Pool()
pool.map(plot, hgroups.iteritems())
