#! /usr/bin/env python

"""\
%prog [-o outfile] <yodafile1> <yodafile2> ...

Merge analysis objects from multiple YODA files, combining the statistics of
objects whose names are found in multiple files. May be used either to merge
disjoint collections of data objects, or to combine multiple statistically
independent runs of the same data objects into one high-statistics run.

TODO:
 * Use the generic yoda.read() and yoda.write() functions to do I/O to any format.
"""

import yoda, optparse, operator, itertools

parser = optparse.OptionParser(usage=__doc__)
parser.add_option('-o', '--output', default='-', dest='OUTPUT_FILE')
opts, filenames = parser.parse_args()

# TODO: move to util module
def merge(objects, op=operator.iadd):
    out_objects = {}

    for ob in objects:
        existing = out_objects.get(ob.path)
        if existing:
            op(ob, existing)
        out_objects[ob.path] = ob

    return out_objects

analysisobjects_in = (yoda.readYODA(filename) for filename in filenames)
analysisobjects_out = merge(itertools.chain(*analysisobjects_in))

yoda.writeYODA(analysisobjects_out.values(), opts.OUTPUT_FILE)
