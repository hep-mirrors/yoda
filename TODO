YODA TODO list
==============

NOW

* Check if the weight2 treatment in Dbn1D is really correct: we're currently
  multiplying it by sign(w). Hmm. (AB)

* Bin division: add quadratic / binomial error treatment enum option (AB)

* Rebinning: merges of n adjacent bins (AB for 1D)

* Add copy constructors and assignment operators for Dbn1D/2D, Scatter2D,
  Histo/ProfileBin1D, Point2D. (AB)

* Rework Axis1D to operate as Axis2D does (MICHAL)

* Template Bin2D and HistoBin2D on DBN type (Dbn2D/3D) cf. Bin1D<DBN>

* Rebinning: global rebinning by integer factor(s) (AB for 1D, MICHAL for 2D)
  Different rebinning factors for X and Y in 2D. Implement for 1D first,
  to define the conventions.

* Test that a y-binned Histo2D has the same per-y-column stats as an
  equivalently x-binned Profile1D. Perhaps use this as an opportunity to
  implement one of the the conversion functions mentioned in the NEXT
  section... (MICHAL)

* Conversion functions to build Histo1D and Profile1D objects for slicings and
  marginalisations along both X and Y directions of 2D histos. Throw an
  exception if binnings are not complete grids. (MICHAL)
  MK: done -- to be reviewed.
  AB: Profile1D slices still needed. If outflows now work on Histo2D, they
      should be included in these slicings.
  MK: Profile1D done. Outflows done. Needs a check if the outflows for Histo1D are
      done in the right way.

* New "flat" file format: adapt WriterYODA and fill ReaderYODA. (HH)
  Need to persist the whole-histo Dbn1D/Dbn2Ds, and over/underflows.
  Use state-setting constructors for Histo and Profile persistency via the
  Reader classes.


NEXT

* Tests:
  Add bin-comparison and negative-weighted mean test(s)
  Test bin-by-index sorted behaviour on Histo and Profile

* Use Weights objects in Dbn1D / Dbn2D (AB)

* Add a Counter type (mostly a UI/persistency wrapper on Dbn1D) (AB)

* Transform differential to integral histos and vice versa. Bins have to be
  contiguous? (AB)

* Multiple errors on Scatter2D -- via a vector of Error2D? How to implement
  flexible error combination? Error correlations? (DANIEL)

* Profile2D & Dbn3D

* WriterFlat and ReaderFlat, for Scatter2D representations only. (HH)

* Arbitrary function transforms on Scatters



AND AFTER THAT...

* Scatter2D -> Scatter<N> again (?) with specialisations for 1D, 2D and 3D

* Terminal histos via WriterTerminal

* Write scripts to convert between data formats and to plot results.

* Template all classes on floating point type (default to double)


PERSISTENCY

* Look into pickling of C++ interfaced classes. WriterS10n? MessagePack? The
  latter looks awesome...

* Store enough information for datafile merging to be well defined
  That means appropriate statistical combinations for each data type.

* Store "norm" and "scale" as members (and write out in histo header)
   Rather than convert type or scale internally. API for this?

Data line definition:
H1D: xl xh y dy w w2 n wx wx2 (dysys,...)
P1D: xl xh y dy w w2 n wx wx2 wy wy2 (dysys,...)?
Define integration with Hendrik's flat format:
"#" marks for comments: gnuplot compatibility
Metadata as special comments
Suggesting logx, logy, etc.?
