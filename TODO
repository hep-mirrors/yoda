YODA TODO list
==============

NOW

* Add copy assignment to Point/Scatter3D and Dbn1D/2D. (AB)

* Rebinning: global rebinning of Axis2D -> Histo2D by integer factor(s) --
  different factors in x and y directions. (MK)
  MK: What if factor%(number of bins in X/Y direction) != 0?
  AB: Merge the last n < factor bins: see Axis1D.

* Comment, clean, and explain the Axis caching mechanisms and the very complex
  functions that manipulate them. (MK)
  MK: Done?

* Unify the API, especially the order of X/Y parameters in various
  constructors! (MK)

* Add functions to Profile2D 'scaffolding' (MK)

* Fix failing Histo2D test (MK)
  MK: I have honestly no idea why this copy constructor fails.
      I have moved it to .cc file and declared it to do nothing and it
      still segfaults. Any ideas are appreciated here.

* Improve tests Makefile setup to work out the path to the Python build dir. (AB)

* Make the first Python test actually test something in YODA! (AB)

* Test that a y-binned Histo2D has the same per-y-column stats as an
  equivalently x-binned Profile1D. Perhaps use this as an opportunity to
  implement one of the the conversion functions mentioned in the NEXT
  section... (MK)
  MK: Conversion function implemented, no tests yet, though.
  MK: Tested, test included in the test suite.

* Test bin-comparison and negative-weighted mean calculations.

* Review and SWIG-map Histo2D -> Histo/Profile1D conversion functions. (AB)

* Add Histo2D binning constructors from Scatter3D and Profile2D.

* New "flat" file format: adapt WriterYODA and fill ReaderYODA. (HH)
  Need to persist the whole-histo Dbn1D/Dbn2Ds, and over/underflows.
  Use state-setting constructors for Histo and Profile persistency via the
  Reader classes.

* Bin division: add quadratic / binomial error treatment enum option (AB)
  AB: done... needs to be checked. Add a test that y +- 1 sigma in [0, 1]

* Add Scatter/Point1D (AB)

* Template Bin2D(done) and HistoBin2D(done) on DBN type (Dbn2D/3D) cf. Bin1D<DBN> (MK)
  MK: Done

* Profile2D, using Dbn3D (AB/MK)
  MK: Done.

* Transform 1D differential to integral histos and vice versa. Bins have to be
  contiguous. (AB)



NEXT

* Use Weights objects in Dbn1D / Dbn2D (AB)

* Add a Counter type (mostly a UI/persistency wrapper on Dbn1D) (AB)

* Multiple errors on Scatter2D -- via a vector of Error2D? How to implement
  flexible error combination? Error correlations? (DANIEL)

* WriterFlat and ReaderFlat, for Scatter2D representations only. (HH)

* Arbitrary function transforms on Scatters (AB)



AND AFTER THAT...

* Scatter2D -> Scatter<N> again (?) with specialisations for 1D, 2D and 3D

* Terminal histos via WriterTerminal

* Write scripts to convert between data formats and to plot results.

* Template all classes on floating point type (default to double)


PERSISTENCY

* Look into pickling of C++ interfaced classes. WriterS10n? MessagePack? The
  latter looks awesome...

* Store enough information for datafile merging to be well defined
  That means appropriate statistical combinations for each data type.

* Store "norm" and "scale" as members (and write out in histo header)
   Rather than convert type or scale internally. API for this?

Data line definition:
H1D: xl xh y dy w w2 n wx wx2 (dysys,...)
P1D: xl xh y dy w w2 n wx wx2 wy wy2 (dysys,...)?
Define integration with Hendrik's flat format:
"#" marks for comments: gnuplot compatibility
Metadata as special comments
Suggesting logx, logy, etc.?
