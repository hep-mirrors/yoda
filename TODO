YODA TODO list
==============

* Use boost

* Book histos and profiles:
  - from Scatter
  - from each other (via temp Scatter?)
  - by log and linear scale divisions
  - explicitly from vector
  - ???

* Remove path from analysis objects

* Weight rescaling with scaleW(scalefactor) on Histo1D and Dbn1D

* Store an overall Dbn1D in Histo1D (and profile?) rather than overflow and underflow

* Histo1D::integral()

* Rename Exception.h -> Exceptions.h, Util.h -> Utils.h

* Implement histo/histo -> scatter, profile/profile -> scatter and
  scatter/scatter -> scatter. Also multiplication?

* Allow setting of all weight moments on bins and histos for persistency loading

* Deal with integral vs. differential histos
   Only use diff but represent as / convert to int?

* Get height measure "right" for log binning
   Really? Or ditch "height"? Have to be careful with Jacobian factors.

* Store enough information for datafile merging to be well defined
   With appropriate statistical combinations for each data type.

* Explicitly return NaN for profile histo points with no weight.

* Write scripts to convert between data formats and to plot results.

* Store "norm" and "scale" as members (and write out in histo header)
   Rather than convert type or scale internally. API for this?

Data line definition:
H1D: xl xh y dy w w2 n wx wx2 (dysys,...)
P1D: xl xh y dy w w2 n wx wx2 wy wy2 (dysys,...)?
Define integration with Hendrik's flat format:
"#" marks for comments: gnuplot compatibility
Metadata as special comments
Suggesting logx, logy, etc.?

* Does Writer hierarchy make sense?
   Yes, for plugins...

* Output header and footer

* Sort out collection iterator args (needs templates)

* Move writer iteration and collection stuff into Writer, leaving WriterYODA
   and WriterAIDA to just implement the actual format writing parts.

* Rename AnalysisObject -> Plotable?
